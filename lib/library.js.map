{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e2cc11d9b56ce42eb345","webpack:///./src/index.js"],"names":["dispatchQueueBatch","client","queue","batchedQuery","map","item","query","fetch","_url","method","headers","body","JSON","stringify","credentials","then","response","json","responses","length","Error","i","errors","reject","resolve","dispatchQueue","_queue","maxBatchSize","_options","maxMatchSize","slice","QueryBatcher","url","options","batchDuration","shouldBatch","variables","operationName","request","promise","Promise","push","setTimeout"],"mappings":"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","file":"Library.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Library\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Library\"] = factory();\n\telse\n\t\troot[\"Library\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e2cc11d9b56ce42eb345\n **/","// helper functions\nfunction dispatchQueueBatch(client, queue) {\n  const batchedQuery = queue.map(item => item.query);\n\n  fetch(client._url, {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(batchedQuery),\n    credentials: 'include',\n  })\n    .then(response => response.json())\n    .then(responses => {\n      if (responses.length !== queue.length) return new Error(\"response length did not match query length\");\n\n      for (let i = 0; i < queue.length; i++) {\n        if (responses[i].errors && responses[i].errors.length) {\n          queue[i].reject(responses[i]);\n        } else {\n          queue[i].resolve(responses[i]);\n        }\n      }\n    });\n}\n\nfunction dispatchQueue(client) {\n  const queue = client._queue;\n\n  client._queue = [];\n\n  const maxBatchSize = client._options.maxMatchSize ;\n  if (maxBatchSize > 0 && maxBatchSize < queue.length) {\n    for (let i = 0; i < queue.length / maxBatchSize; i++) {\n      dispatchQueueBatch(\n        client,\n        queue.slice(i * maxBatchSize, (i + 1) * maxBatchSize)\n      );\n    }\n  } else {\n    dispatchQueueBatch(client, queue);\n  }\n}\n\n// api\nexport default class QueryBatcher {\n  constructor(url, options = { batchDuration = 6, shouldBatch = true, maxBatchSize = 0 } = {}) {\n    this._url = url;\n    this._options = options;\n    this._queue = [];\n  }\n\n  /**\n   * Fetch will send a graphql request and return the parsed json.\n   * @param query         {string}    the graphql query.\n   * @param variables     {[object]}  any variables you wish to inject as key/value pairs.\n   * @param operationName {[string]}  the graphql operationName.\n   *\n   * @return {promise}\n   */\n  fetch(query, variables, operationName) {\n    const request = { query };\n\n    if (variables) {\n      request.variables = variables;\n    }\n\n    if (operationName) {\n      request.operationName = operationName;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      this._queue.push({ request, resolve, reject });\n\n      if (this._queue.length === 0) {\n        if (this._options.shouldBatch) {\n          setTimeout(() => dispatchQueue(this), this._options.batchDuration);\n        } else {\n          dispatchQueue(this);\n        }\n      }\n    });\n\n    return promise;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/"],"sourceRoot":""}